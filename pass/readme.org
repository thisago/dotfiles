#+title: Pass Setup
#+auto_tangle: yes

* Manual Setup
To use =pass= securely, you need to generate a dedicated GPG key for encryption with Ed25519 for signing and Curve25519 for encryption.

** Generating GPG key
*** GPG Key Config
#+begin_src text :tangle gpg-batch.txt
%no-protection
Key-Type: eddsa
Key-Curve: ed25519
Subkey-Type: ecdh
Subkey-Curve: cv25519
Name-Real: pass
Name-Email: pass@localhost
Expire-Date: 0
%commit
#+end_src

*** Generating
#+begin_src bash :results none
gpg --batch --generate-key gpg-batch.txt
#+end_src

*** Retrieving the Generated Key
#+name: key_id
#+begin_src bash
gpg --list-keys --with-colons pass@localhost | awk -F: '/^pub/ {print $5; exit}'
#+end_src

#+RESULTS: key_id
: 8CA82212EC57873B

*** Initialize =pass= with the Generated Key
#+begin_src bash :var key_id=key_id :results pp
pass init "$key_id"
#+end_src

#+RESULTS:
: mkdir: created directory '/home/user/.password-store/'
: Password store initialized for 8CA82212EC57873B


* Suggested File Structure
- =cloud/=
  - =github.com/=
    - =username/=
      - =password.gpg=
      - =otp.gpg=
      - =tokens/=
        - =copilot.gpg=
  - =aws.amazon.com/=
    - =username/=
      - =password.gpg=
      - =otp.gpg=
      - =tokens/=
        - =access_key.gpg=
        - =secret_key.gpg=
    - =iam/=
      - =username/=
        - =id.gpg=
        - =password.gpg=
        - =tokens/=
          - =access_key.gpg=
          - =secret_key.gpg=
  - =account.mongodb.com/=
    - =username/=
      - =password.gpg=
      - =otp.gpg=
      - =cluster/=
        - =cluster_name.gpg=
- =wifi/=
  - =home/=
    - =network_name.gpg=

** Environment Variables Loading
Suggested naming:
- =OPENAI_API_KEY= :: =github.com/username/tokens/copilot.gpg=
- =MONGO_URI= :: =account.mongodb.com/username/cluster/cluster_name.gpg=
